CSS : Cascading Style Sheets
    formating :
        Colors
        Fonts
        Sizes
        Layouts
        Animations
        Responsive design
        and other things


where we write css :
    1- External CSS
        - file with .css
        - link it in html file by
            <link rel="stylesheet" href="styles.css">

    2- Internal CSS
        - in head tag -> style tag

    3- inline
        - in any html tag -> style attribute



CSS Priority Order (from lowest → highest)

    1- Browser defaults
        Example: links are blue by default, paragraphs have margins, etc.

    2- External / Internal CSS rules (normal styles you write)
        Later rules override earlier rules if they target the same element.

    3- Specificity (more specific selector wins)
        Universal selector * (lowest)
        Type selector div, p
        Class, pseudo-class, attribute selector .box, :hover, [type=text]
        ID selector #main

    4- Inline styles (inside style="")

    5- !important (highest priority)

    briefly :
        1- Last rule wins if selectors are same.
        2- More specific selector wins.
        3- ID > Class > Element.
        4- Inline
        5- !important beats everything.




CSS Rule consists of :
    selector {
        property01 : value01;
        property02 : value02;
        ....
    }

Selector types :
        Universal Selector → *
        HTML Tag Name Selector → p, h1
        Class Selector → .classname
        ID Selector → #idname
        Group Selector → h1, p
        Descendant Selector → div p
        Child Selector → div > p
        Adjacent Sibling Selector → h1 + p
        General Sibling Selector → h1 ~ p
        Attribute Selector → input[type="text"]
        Pseudo-class Selector → a:hover, input:focus
        Pseudo-element Selector → p::first-line, p::before

        childern -> element:nth-child(3)
                    nth-child(odd)
                    nth-child(even)

        parent -> 
                .parent:has(.child:hover) {
                    background-color: lightblue;
                }


:root is a pseudo-class selector that represents the top-most element in the HTML document.
        :root {
            --main-color: #3498db;
            --text-color: #333;
            --padding: 10px;
        }

        body {
            color: var(--text-color);
            background: var(--main-color);
            padding: var(--padding);
        }







Colors in CSS :
    1- Named Colors
    2- Hexadecimal
    3- RGB
    4- RGBA
    5- HSL
    6- HSLA
    7- CSS Variables
    8- Gradients


Background in CSS :
    1- Background Color
    2- Background Image
    3- Background Repeat
    4- Background Position
    5- Background Size
    6- Background Attachment
    7- Background Gradient




Units used in CSS
    1- Absolute Units
        px → pixels (most common)
        pt → points (1pt = 1/72 inch, used in print)
        cm → centimeters
        mm → millimeters
        in → inches
        pc → picas (1pc = 12pt)

    2- Relative Units
        em → relative to the font-size of the element’s parent
        rem → relative to the root (<html>) font-size
        ex → relative to the x-height of the font (rare)
        ch → relative to the width of the “0” character

    3- Viewport-relative units
        vw → 1% of viewport width
        vh → 1% of viewport height
        vmin → 1% of the smaller dimension (width/height)
        vmax → 1% of the larger dimension


    4- Percentage

    *** For modern responsive design:
            Use rem for fonts (scales consistently).
            Use % / vw / vh for layouts.
            Avoid too much px for flexibility.


